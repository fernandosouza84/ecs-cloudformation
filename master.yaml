Description: >

    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with 
    ECS hosts distributed across multiple Availability Zones. 

    Last Modified: 15th July 2017
    Author: Marcos Sobrinho <marcos.sobrinho@truckpad.com.br>
    Author: Paul Maddox <pmaddox@amazon.com>


Parameters:

    InstanceType:
        Description: Instance type to use
        Type: String
        AllowedValues: [t2.large, c4.large, c4.xlarge, c4.2xlarge, m4.large, m4.xlarge, m4.2xlarge]

    ClusterSize:
        Description: How many ECS hosts do you want to initially deploy?
        Type: Number
        Default: 2

    SubnetPrefix:
        Description: VPC Subnet prefix to create
        Type: String
        Default: '10.16'
        AllowedPattern: ^[0-9]{2}\.[0-9]{2}$

    KeyName:
        Description: Name of an existing EC2 KeyPair to enable SSH access to the ECS cluster
        Type: AWS::EC2::KeyPair::KeyName

Resources:

    vpc:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/cfn-truckpad/ecs/infrastructure/vpc.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VpcCIDR: !Join ['.', [!Ref SubnetPrefix, '0.0/16']]
                PublicSubnet1CIDR: !Join ['.', [!Ref SubnetPrefix, '8.0/21']]
                PublicSubnet2CIDR: !Join ['.', [!Ref SubnetPrefix, '16.0/21']]
                PrivateSubnet1CIDR: !Join ['.', [!Ref SubnetPrefix, '24.0/21']]
                PrivateSubnet2CIDR: !Join ['.', [!Ref SubnetPrefix, '32.0/21']]

    sgs:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/cfn-truckpad/ecs/infrastructure/security-groups.yaml
            Parameters: 
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt vpc.Outputs.VPC

    alb:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/cfn-truckpad/ecs/infrastructure/load-balancers.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt vpc.Outputs.VPC
                Subnets: !GetAtt vpc.Outputs.PublicSubnets
                SecurityGroup: !GetAtt sgs.Outputs.LoadBalancerSecurityGroup

    ecs:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/cfn-truckpad/ecs/infrastructure/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                KeyName: !Ref KeyName
                InstanceType: !Ref InstanceType
                ClusterSize: !Ref ClusterSize
                VPC: !GetAtt vpc.Outputs.VPC
                SecurityGroup: !GetAtt sgs.Outputs.ECSHostSecurityGroup
                Subnets: !GetAtt vpc.Outputs.PrivateSubnets
